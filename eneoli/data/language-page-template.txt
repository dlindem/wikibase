= NeoVoc for @langname =
== Workflow steps ==
=== Concepts and multilingual equivalents ===
Validated lists of terms to start with (i.e., results of ENEOLI WG1 Task 1.1) are French or English, and have been uploaded to Wikibase. As soon as Task 1.1 provides more French or English terms, they will be uploaded, too. For each of these terms, the task leaders create a new concept entity. That is, entities describing concepts will have only French equivalents in the beginning. In order to ease the manual provision of equivalents (an equivalent is a term in another language representing the same concept) in more languages, and to get drafted glosses (glosses are very short sense definitions, used for a human user to discriminate word senses)), we automatically import what is there for the concept on Wikidata.

The first goal is to validate all multilingual equivalents that have been imported for @langname from Wikidata. For this, use the second query on this page (concepts with a warning), and see a list of entries that contain a warning attached to the label of @langname. Click on the ID of the entry (first column), and decide:
* If the equivalent imported to the "statements" section of the entry is fine, remove the warning (click "edit" next to the equivalent in @langname, send the "warning" qualifier to the trash, and save).
* If the imported equivalent is to be replaced, replace it by clicking "edit" next to the equivalent in @langname, and correct it. Also, send the Wikidata warning to the trash before saving.
* If, in addition to a drafted equivalent, you find a gloss (short description) in the upper "description" section, please review also that. If you regard it as inappropriate, please edit it; you can provide a gloss if there is nothing if you want (you are encouraged to do so, but the equivalents are more important than the glosses, and, for these glosses, we will not have "warnings" for the unvalidated).
* From time to time, the label in the upper part of the entry ("labels" section) will be updated according to what you enter as "equivalent" in @langname in the "statements" section. That means you don't have to edit the equivalent manually in both places; the "equivalent" in the "statements" section is the one we will use for the creation of a lexical entry. The reason why we have to enter new equivalents in the “statements” section (instead of simply adding labels in the “labels” section) is that we want to make statements about these equivalents (for example, that there is no "warning" stating that it is still unvalidated, or where we have found the equivalent).

The second goal will be to provide missing equivalents in @langname. For this, use the first query on this page ("all concepts"). The first lines are those that are still not defined. To define an equivalent, enter the entry page by clicking on the ID in the first column, and click on "add value" in the “statements" section, where values for the “equivalents" property are listed (e.g., for example at https://eneoli.wikibase.cloud/wiki/Item:Q1083#P57).

NEW DECISION (July 15, 2024): We have decided that we want to annotate all validated equivalents with one metadatum: The information of who has validated the equivalent. That will be a [[Property:P64|P64]] qualifier to the equivalent statement, as in this example: https://eneoli.wikibase.cloud/wiki/Item:Q1080#P57 (Basque equivalent). The reasons for this decision are: (1) Instead of defining validation as the absence of “warnings” on the equivalent, we want to have an explicit statement here: “validated by”; (2) The annotation of persons in the “validated by” qualifier enables us to create real-time summaries of who has validated which (and how many) terms.
* In order to add the “validated by” qualifier, edit the equivalent (click “edit” next to the equivalent), then “add qualifier” (NOT “add reference”), start to type “validated by” or type “P64” in the qualifier property field, and then start to write the name of the validator in the qualifier value field. That will suggest matching entities describing persons.
* The person who has validated the equivalent needs to have its “person entry” (an entity describing the person) on this Wikibase. We already have entities for those who author articles in our Zotero collection, e.g. https://eneoli.wikibase.cloud/entity/Q624 for John Humbley.
* It is easy to create a new person entity: Go to https://eneoli.wikibase.cloud/wiki/Special:NewItem and enter the name of the person as English (en) label, “a person” as description, create the entity. You should then add one statement: “instance of “(P5) “human” (Q5), and, if available, the exact match on Wikidata (P1).
=== Linguistic description (lexicographical view) ===
For concept equivalents in @langname which do not have any remaining warnings, AND where you have added the “validated by” qualifier (see above), we will automatically create a dictionary entry. The linguistic description of the term will go there.
* We will soon decide on the type of information to be collected in each term's dictionary entry.
=== Meta-terminology ===
The meta-terminology used for this task might be unusual for terminologists and/or lexicographers; for obvious reasons, we tend to call things how they are called on a Wikibase. May this very short glossary be helpful:
* “concept entry”: On a Wikibase, an entity ID starting with “Q” describes an ontological concept (an entry in a concept-centered termbase where concepts can have terminological relations to each other), which is “labelled” with one preferred label and several “alternative” labels. Wikibase labels are not supposed to be terms, at least not on Wikidata; they are strings that users might want to enter in a search when trying to find the concept entry. That allows fuzzyness and redundancy. We enter our exact and validated terms (the multilingual equivalents that denote the concept we have in front of us) in the “statements” section, where we can further describe them.
* “lexeme entry”: On a Wikibase, lexical dictionary-like entries (lemma-centered entries that offer a lexicographic description) are by default modelled according to Ontolex-Lemon. Their ID starts with an “L”. Each Lexeme entity has “Sense” and “Form” subentities; these are displayed on the same entity page (e.g. https://eneoli.wikibase.cloud/wiki/Lexeme:L1). The “sense” section lists dictionary senses, the “forms” section lists (inflected) word forms together with a morphological description of the form (on Wikibase called “grammatical features”, like genitive, plural, etc.). Lexeme entries do not have labels, they have lemmata associated to language codes instead (they can have more than one, look at https://www.wikidata.org/wiki/Lexeme:L791). The further linguistic description of the lexeme consists in statements attached at the appropriate level (entry, sense, form). Most important for us is that dictionary senses will be linked to concept entries. That link or "property" in Ontolex is referred to as ontolex:reference, on Wikidata as http://www.wikidata.org/entity/P5137, and on our Wikibase as https://eneoli.wikibase.cloud/entity/P12 (“concept for this sense”). This is what links lexical entries to concept entries; exploiting that link, data involving concept entries and lexical entries can be brought together. Lemmata of lexical entries are the strings to find in the NeoCorpus articles (if a lemma is found in lemmatized text, the article metadata gets enriched with that information - that is our plan. We will thus be able to ask in what articles a term occurs, and do that multilingually, exploting links to commonly denoted concepts).
* A "term" in our database will appear twice: (1) as equivalent to a concept, in the "statements" section of a concept entry, and (2) as lemma to a lexical entry. Equivalents with no warning attached to it are validated terms. For these, lexical entries will be created automatically as soon as the task leaders run the maintanance script; the equivalent statement and the lexical entry sense will be linked to each other. You have to make sure that concept equivalents without a warning attached are indeed validated.
* A "warning" is a [[Property:P58|P58]] qualifier to an equivalent statement. For adding a warning to an equivalent, click on "edit" next to the equivalent, and add a qualifier, typing "warning" or "P58" in the qualifier property field, and entering any value in the qualifier value field, then click "save".
* The “validated by” [[Property:P64|P64]] qualifier is created in the same way. Only equivalents that have that qualifier will be taken as validated. That means that you can safely DRAFT equivalents directly on Wikibase; until somebody qualifies them with “validated by” and indicating the person who signs the validation, it will not appear when querying for validated terms.
* "Wikibase" is a software platform, and we are running our own instance of it, this one, ENEOLI Wikibase. "Wikidata" is another Wikibase instance, available at https://www.wikidata.org.
== See the content of NeoVoc for @langname ==
=== All NeoVoc concept entries ===
<sparql tryit="1">
#title: All NeoVoc concepts with labels and glosses in @langname, and English and French labels and glosses.

PREFIX enwb: <https://eneoli.wikibase.cloud/entity/>
PREFIX endp: <https://eneoli.wikibase.cloud/prop/direct/>
PREFIX enp: <https://eneoli.wikibase.cloud/prop/>
PREFIX enps: <https://eneoli.wikibase.cloud/prop/statement/>
PREFIX enpq: <https://eneoli.wikibase.cloud/prop/qualifier/>

select ?concept ?equiv_mylang ?warning ?descript_mylang (iri(concat(str(wd:),?wd)) as ?wikidata) ?label_en ?descript_en ?label_fr ?descript_fr

where {
  ?concept endp:P5 enwb:Q12. # instances of "NeoVoc Concept"
  optional {?concept endp:P1 ?wd.}
  optional {?concept rdfs:label ?label_en. filter(lang(?label_en)="en")}
  optional {?concept rdfs:label ?label_fr. filter(lang(?label_fr)="fr")}
  optional {?concept enp:P57 ?equiv_st. ?equiv_st enps:P57 ?equiv_mylang. filter(lang(?equiv_mylang)="@langwikicode")
           optional {?equiv_st enpq:P58 ?warning.}}
  optional {?concept schema:description ?descript_en. filter(lang(?descript_en)="en")}
  optional {?concept schema:description ?descript_fr. filter(lang(?descript_fr)="fr")}
  optional {?concept schema:description ?descript_mylang. filter(lang(?descript_mylang)="@langwikicode")}

} order by lcase(?equiv_mylang)
</sparql>
=== NeoVoc entries with equivalents for @langname that still have warnings ===
<sparql tryit="1">
#title: NeoVoc concepts with warnings on @langname labels.

PREFIX enwb: <https://eneoli.wikibase.cloud/entity/>
PREFIX endp: <https://eneoli.wikibase.cloud/prop/direct/>
PREFIX enp: <https://eneoli.wikibase.cloud/prop/>
PREFIX enps: <https://eneoli.wikibase.cloud/prop/statement/>
PREFIX enpq: <https://eneoli.wikibase.cloud/prop/qualifier/>

select ?concept ?equiv_mylang ?warning ?descript_mylang (iri(concat(str(wd:),?wd)) as ?wikidata) ?label_en ?descript_en ?label_fr ?descript_fr

where {
  ?concept endp:P5 enwb:Q12. # instances of "NeoVoc Concept"
  optional {?concept endp:P1 ?wd.}
  optional {?concept rdfs:label ?label_en. filter(lang(?label_en)="en")}
  optional {?concept rdfs:label ?label_fr. filter(lang(?label_fr)="fr")}
  ?concept enp:P57 ?equiv_st. ?equiv_st enps:P57 ?equiv_mylang. filter(lang(?equiv_mylang)="@langwikicode")
           ?equiv_st enpq:P58 ?warning.
  optional {?concept schema:description ?descript_en. filter(lang(?descript_en)="en")}
  optional {?concept schema:description ?descript_fr. filter(lang(?descript_fr)="fr")}
  optional {?concept schema:description ?descript_mylang. filter(lang(?descript_mylang)="@langwikicode")}

} order by lcase(?equiv_mylang)
</sparql>
=== Only those NeoVoc entries with validated equivalents in @langname (equivalents that are qualified with "validated by") ===
<sparql tryit="1">
#title: NeoVoc concepts validated @langname equivalents.

PREFIX enwb: <https://eneoli.wikibase.cloud/entity/>
PREFIX endp: <https://eneoli.wikibase.cloud/prop/direct/>
PREFIX enp: <https://eneoli.wikibase.cloud/prop/>
PREFIX enps: <https://eneoli.wikibase.cloud/prop/statement/>
PREFIX enpq: <https://eneoli.wikibase.cloud/prop/qualifier/>

select
?concept ?equiv_mylang ?validator ?descript_mylang ?sense (iri(concat(str(wd:),?wd)) as ?wikidata) ?label_en ?descript_en ?label_fr ?descript_fr

where {
  ?concept endp:P5 enwb:Q12. # instances of "NeoVoc Concept"
  optional {?concept endp:P1 ?wd.}
  optional {?concept rdfs:label ?label_en. filter(lang(?label_en)="en")}
  optional {?concept rdfs:label ?label_fr. filter(lang(?label_fr)="fr")}
  ?concept enp:P57 ?equiv_st. ?equiv_st enps:P57 ?equiv_mylang. filter(lang(?equiv_mylang)="@langwikicode")
           ?equiv_st enpq:P64 [rdfs:label ?validator]. filter(lang(?validator)="en") # This restricts to equivalents that have the "validated by" qualifier
           optional {?equiv_st enpq:P63 ?sense.}
  optional {?concept schema:description ?descript_en. filter(lang(?descript_en)="en")}
  optional {?concept schema:description ?descript_fr. filter(lang(?descript_fr)="fr")}
  optional {?concept schema:description ?descript_mylang. filter(lang(?descript_mylang)="@langwikicode")}

} order by lcase(?equiv_mylang)
</sparql>
=== NeoVoc lexical entries in @langname ===
* We will create these after providing equivalents in the concept entries
<sparql tryit="1">
#title: All NeoVoc @langname lexical entries

PREFIX enwb: <https://eneoli.wikibase.cloud/entity/>
PREFIX endp: <https://eneoli.wikibase.cloud/prop/direct/>

select ?lexical_entry ?lemma ?posLabel ?sense ?sense_gloss ?concept ?conceptLabel (iri(concat(str(wd:),?wd)) as ?wikidata)

where {
  ?lexical_entry a ontolex:LexicalEntry; dct:language enwb:@wikibase_item; wikibase:lemma ?lemma; wikibase:lexicalCategory ?pos; ontolex:sense ?sense.
  optional {?sense endp:P12 ?concept. optional {?sense skos:definition ?sense_gloss.}
  optional {?concept endp:P1 ?wd.}
  SERVICE wikibase:label { bd:serviceParam wikibase:language "@langwikicode,en,fr". }}
  }
</sparql>

''This page will be updated automatically, don't edit it (last edited on July 15, 2024).''

''For discussion in the group working on @langname, you may use this page: [[Talk:NeoVoc/language/@langwikicode]].''
